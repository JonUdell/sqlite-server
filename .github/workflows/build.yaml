name: Build Binaries

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Tag for this release (e.g. v0.1.0)"
        required: true
        type: string

jobs:

  prepare:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Remove go-sqlite3 replace directive and regenerate go.sum
        run: |
          sed -i '/^replace github.com\/mattn\/go-sqlite3 =>/d' go.mod
          go mod tidy

      - name: Upload cleaned go.mod and go.sum
        uses: actions/upload-artifact@v4
        with:
          name: gomod
          path: |
            go.mod
            go.sum

  build-linux:
    runs-on: ubuntu-latest
    needs: [prepare]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: gomod
      - uses: actions/setup-go@v4
        with:
          go-version: "1.21"
      - run: |
          GOOS=linux GOARCH=amd64 go build -v -o xmlui-test-server
          tar -czf xmlui-test-server-linux.tar.gz xmlui-test-server
      - uses: softprops/action-gh-release@v2
        with:
          files: xmlui-test-server-linux.tar.gz
          tag_name: ${{ github.event.inputs.tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}

  build-mac:
    runs-on: macos-latest
    needs: build-linux
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: gomod
      - uses: actions/setup-go@v4
        with:
          go-version: "1.21"
      - run: |
          GOOS=darwin GOARCH=arm64 go build -v -o xmlui-test-server
          tar -czf xmlui-test-server-mac-arm.tar.gz xmlui-test-server
      - uses: softprops/action-gh-release@v2
        with:
          files: xmlui-test-server-mac-arm.tar.gz
          tag_name: ${{ github.event.inputs.tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}

  build-windows:
    runs-on: ubuntu-latest
    needs: build-mac
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: gomod

      - uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      - name: Install mingw-w64 for Windows CGO cross-compilation
        run: |
          sudo apt-get update
          sudo apt-get install -y mingw-w64

      - name: Build Windows binary with CGO
        env:
          CGO_ENABLED: 1
          CC: x86_64-w64-mingw32-gcc
        run: |
          GOOS=windows GOARCH=amd64 go build -v -o xmlui-test-server.exe
          zip xmlui-test-server-windows.zip xmlui-test-server.exe

      - uses: softprops/action-gh-release@v2
        with:
          files: xmlui-test-server-windows.zip
          tag_name: ${{ github.event.inputs.tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}

  create-release:
    needs: [build-linux, build-mac, build-windows]
    runs-on: ubuntu-latest
    steps:
      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}

